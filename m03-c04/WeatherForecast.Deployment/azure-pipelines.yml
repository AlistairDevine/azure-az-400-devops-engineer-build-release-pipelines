pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: ci
    displayName: Continuous Integration
    jobs:
    - job: publish_artifact
      displayName: 'Package Weatherforecast Api'
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK 8.x'
        inputs:
          version: 8.x
      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Publish'
        inputs:
          command: publish
          arguments: '--output $(Build.ArtifactStagingDirectory)/api-package --configuration $(Configuration)'
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline Artifact'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/api-package'
          artifact: 'Weatherforecast Api'

    - job: build_and_test
      displayName: 'Build and Test .NET 8 Application'
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk 8.x'
        inputs:
          version: 8.x
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          projects: '**/*.csproj'
          arguments: '--configuration $(Configuration)'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        inputs:
          command: test
          projects: '**/*.UnitTest.csproj'
          arguments: '--configuration $(Configuration)'
  - stage: cd_to_test
    displayName: Continuous Deployment to Test
    jobs:
    - template: stage-deployment.yml
      parameters:
        ResourceGroupName: 'weatherforecast-hb-test'
        WebAppName: 'weatherforecast-hb-test'
  - stage: cd_to_production
    displayName: Continuous Deployment to Production
    jobs:
    - template: stage-deployment.yml
      parameters:
        ResourceGroupName: 'weatherforecast-hb-production'
        WebAppName: 'weatherforecast-hb-production'